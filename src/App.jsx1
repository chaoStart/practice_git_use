import React, { useState, useEffect, useRef } from 'react'
import reactLogo from './assets/react.svg'
// import Nowtimer from './pages/index'
// import './App.css'
const getTime = (date, type) => {
  let time = null;
  switch (type) {
    case 'hour':
      time = date.getHours();
      time = time.toString().length === 2 ? time : `0${time}`;
      break;
    case 'minute':
      time = date.getMinutes();
      time = time.toString().length === 2 ? time : `0${time}`;
      break;
    case 'second':
      time = date.getSeconds();
      time = time.toString().length === 2 ? time : `0${time}`;
      break;
    default:
  }
  return time;
};
// 周映射
const weekDays = ['日', '一', '二', '三', '四', '五', '六'];
// 格式化时间
const formatDate = currrentDate => {
  const year = currrentDate.getFullYear();
  const month = currrentDate.getMonth() + 1;
  const date = currrentDate.getDate();
  const day = weekDays[currrentDate.getDay()];
  const time = `${getTime(currrentDate, 'hour')}:${getTime(
    currrentDate,
    'minute'
  )}:${getTime(currrentDate, 'second')}`;
  return `${year}年${month}月${date}日 周${day} ${time}`;
};

function App() {
  const [timer, settimer] = useState(null)
  const [currentTime, setcurrentTime] = useState(new Date())
  useEffect(() => {
    settimer(setInterval(
      () => {
        setcurrentTime(new Date())
      }, 1000
    ))
  }, [])

  // useEffect(() => {
  //   return () => {
  //     if (timer !== null) {
  //       clearInterval(timer);
  //   }
  //   }
  // }, [third])


  return (
    // <div><Nowtimer></Nowtimer></div>
    // const { currentTime } = state;
    <div style={{ fontSize: '40px', color: 'rgb(26, 255, 163)', fontWeight: '400', textAlign: 'right', }}>
      {formatDate(currentTime)}
    </div>
  );
}
export default App




// import React, { useState } from 'react';
// import Child from './pages/exercise/index'
// import './App.css'
// function App() {
//   let [data, setData] = useState({
//     name: '浩克',
//     age: 18
//   }
//   );
//   let [show, setShow] = useState(true)
//   return (
//     <>
//       {show ? <Child data={data} /> : ""
//       }
//       <button onClick={() => { setData({ name: "疯狂浩克", age: data.age }) }}>变身</button>
//       <button onClick={() => { setShow(false) }}>卸载</button>
//     </>
//   )
// }
// export default App;





